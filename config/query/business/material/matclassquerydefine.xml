<?xml version="1.0" encoding="UTF-8"?>
<root>
  <query>
    <pool></pool>     
    <name value="unitquerydefine_search" />
    <where>
      <w name="A.UnitName" des=""  reqName="unitIdName" dtype="ch" oper="like"  lg="AND" bt="" />
   	  <w name="A.UnitID" des=""  reqName="userUnitId" dtype="ch" oper="rlike"  lg="" bt="" />   
    </where>
    <select>
      <f name="B.UnitID" alias="" ctype="" />
      <f name="B.UnitName" alias="" ctype="" />
      <f name="B.OrgID" alias="" ctype="" />
      <f name="C.UnitId" alias="parentUnitId" ctype="" />
      <f name="C.UnitName" alias="parentUnitName" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>S_DEPT AS A, S_DEPT AS B LEFT JOIN (SELECT UnitID, UnitName FROM S_DEPT where DeleteFlag = '0') AS C ON C.UnitID = B.ParentID WHERE A.DeleteFlag = '0'  AND B.DeleteFlag = '0' AND (B.ParentID = A.UnitId OR B.UnitID = A.UnitID) </from>
    <orderby>B.SORTNO</orderby>
    <groupby>B.UnitID,B.UnitName,B.OrgID,C.UnitId,C.UnitName</groupby>
    <having></having>
	<power>
	</power>    
  </query>
  <query>
    <pool></pool>     
    <name value="unitquerydefine_confirmunitname" />
    <where>
      <w name="A.UnitName" des=""  reqName="unitIdName" dtype="ch" oper="="  lg="AND" bt="" />
   	  <w name="A.UnitID" des=""  reqName="userUnitId" dtype="ch" oper="rlike"  lg="" bt="" />   
    </where>
    <select>
		<f name="distinct A.UnitID" ctype="" alias=""/>
		<f name="A.UnitName" ctype="" alias=""/>
		<f name="A.OrgID" ctype="" alias=""/>
		<f name="B.UnitId" ctype="" alias="parentUnitId"/>
		<f name="B.UnitName" ctype="" alias="parentUnitName"/>
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>S_DEPT AS A LEFT JOIN (SELECT UnitID, UnitName FROM S_DEPT where DeleteFlag = '0') AS B ON B.UnitID = A.ParentID WHERE A.DeleteFlag = '0'  </from>
    <orderby>A.ParentID, A.SORTNO</orderby>
    <groupby></groupby>
    <having></having>
	<power>
	</power>    
  </query>  
  <query>
    <pool></pool>     
    <name value="unitquerydefine_getparentdeptguid" />
    <where>
      <w name="A.UnitName" des=""  reqName="parentUnitName" dtype="ch" oper="="  lg="" bt="" />
    </where>
    <select>
      <f name="A.UnitID" alias="" ctype="" />
      <f name="A.DeptGuid" alias="" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>S_DEPT AS A WHERE A.DeleteFlag = '0' </from>
    <groupby>A.UnitID, A.DeptGuid</groupby>
    <having></having>
  </query>
  <query>
    <pool></pool>     
    <name value="unitquerydefine_getunitchain" />
    <where>
      <w name="A.Unitid" des=""  reqName="unitId" dtype="ch" oper="rlike"  lg="" bt="" />
    </where>
    <select>
      <f name="A.UnitID" alias="" ctype="" />
      <f name="A.UnitName" alias="" ctype="" />
      <f name="A.ParentID" alias="" ctype="" />
      <f name="A.SortNo" alias="" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>S_DEPT AS A WHERE A.DeleteFlag = '0' </from>
    <groupby></groupby>
    <having></having>
  </query>
  <query>
    <pool></pool>     
    <name value="unitquerydefine_getunit" />
    <where>
      <w name="B.UserID" des=""  reqName="userId" dtype="ch" oper="="  lg="" bt="" />
    </where>
    <select>
      <f name="A.UnitID" alias="" ctype="" />
      <f name="A.UnitName" alias="" ctype="" />
      <f name="A.ParentID" alias="" ctype="" />
      <f name="A.SortNo" alias="" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>S_DEPT AS A, S_USER AS B WHERE A.DeleteFlag = '0' AND A.UnitID = B.UnitID </from>
    <groupby></groupby>
    <having></having>
  </query>  
  <query>
    <pool></pool>     
    <name value="mainframequery_getallmaterials" />
    <where>
    </where>
    <select>
    	<f name="DISTINCT A.classId" alias="" ctype="" />
    	<f name="A.className" alias="" ctype="" />
    	<f name="A.formatDes" alias="" ctype="" />
    	<f name="A.parentId" alias="" ctype="" />
    	<f name="A.DeptGuid" alias="" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源' -->
    <from>b_material as A WHERE A.DeleteFlag = '0'</from>
    <orderby>A.classId, A.parentid</orderby>
    <groupby></groupby>
    <having></having>
  </query>
</root>