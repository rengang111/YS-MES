<?xml version="1.0" encoding="UTF-8"?>
<root>
  <query>
    <pool></pool>     
    <name value="mouldcontractquerydefine_search" />
    <where>
      <w name="A.full_field" des=""  reqName="keyword1" dtype="ch" oper="like"  lg="AND" bt="" />
   	  <w name="A.full_field" des=""  reqName="keyword2" dtype="ch" oper="like"  lg="" bt="" />   
    </where>
    <select>
      <f name="DISTINCT A.id" alias="" ctype="" />
      <f name="A.contractId" alias="" ctype="" />
      <f name="A.productModelId" alias="" ctype="" />
      <f name="A.type" alias="" ctype="" />
      <f name="A.supplierId" alias="" ctype="" />
      <f name="A.supplierName" alias="" ctype="" />
      <f name="A.parentName" alias="" ctype="" />
      <f name="ifnull(DATE_FORMAT(A.contractDate, '%Y-%m-%d'), '')" alias="contractDate" ctype="" />
      <f name="ifnull(DATE_FORMAT(A.deliverDate, '%Y-%m-%d'), '')" alias="deliverDate" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>v_MouldContract as A WHERE A.DeleteFlag = '0' </from>
    <orderby>A.contractId</orderby>
    <groupby></groupby>
    <having></having>
	<power>
	</power>    
  </query>
  <query>
    <pool></pool>     
    <name value="mouldcontractquerydefine_searchproductmodel" />
    <where>
    </where>
    <select>
      <f name="CONCAT_WS(' | ', A.dicName, A.dicDes)" alias="viewList" ctype="" />
      <f name="A.dicId" alias="id" ctype="" />
      <f name="A.dicName" alias="name" ctype="" />
      <f name="A.dicDes" alias="des" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>s_dic as A WHERE A.dictypeid='产品型号' and A.deleteflag='0' and A.enableflag='0' </from>
    <orderby>sortNo</orderby>
    <groupby></groupby>
    <having></having>
	<power>
	</power>    
  </query>
  <query>
    <pool></pool>     
    <name value="mouldcontractquerydefine_searchsupplierbytype" />
    <where>
    	<w name="A.type" des=""  reqName="type" dtype="ch" oper="="  lg="AND" bt="" />
    	<w name="B.supplierId" des=""  reqName="id" dtype="ch" oper="like"  lg="OR" bt="(" />
    	<w name="B.supplierName" des=""  reqName="id" dtype="ch" oper="like"  lg="OR" bt="" />
    	<w name="B.shortName" des=""  reqName="id" dtype="ch" oper="like"  lg="" bt=")" />
    </where>
    <select>
      <f name="DISTINCT CONCAT_WS(' | ', B.supplierId, B.supplierName)" alias="viewList" ctype="" />
      <f name="B.recordId" alias="keyId" ctype="" />
      <f name="B.supplierId" alias="id" ctype="" />
      <f name="B.supplierName" alias="name" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>v_MouldContractSupplier AS A, b_supplier as B WHERE B.deleteFlag = '0' AND B.recordId = A.mouldFactoryId </from>
    <orderby>B.supplierId, B.supplierName</orderby>
    <groupby></groupby>
    <having></having>
	<power>
	</power>    
  </query>
  <query>
    <pool></pool>     
    <name value="mouldcontractquerydefine_searchfactory" />
    <where>
    </where>
    <select>
      <f name="A.recordId" alias="id" ctype="" />
      <f name="A.shortName" alias="" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>b_organization as A, v_MouldFactoryType as B WHERE A.DeleteFlag = '0' AND A.type = B.id </from>
    <orderby>shortName</orderby>
    <groupby></groupby>
    <having></having>
	<power>
	</power>    
  </query>
  <query>
    <pool></pool>     
    <name value="mouldcontractquerydefine_searchfactorybyproductmodel" />
    <where>
    	<w name="A.productModelId" des=""  reqName="productModelId" dtype="ch" oper="="  lg="" bt="" />
    </where>
    <select>
      <f name="DISTINCT C.recordId" alias="id" ctype="" />
      <f name="C.shortName" alias="" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>b_MouldBaseInfo as A, b_MouldFactory as B, b_organization as C WHERE C.DeleteFlag = '0' AND C.recordid = B.mouldFactoryId AND B.mouldId = A.id</from>
    <orderby>shortName</orderby>
    <groupby></groupby>
    <having></having>
	<power>
	</power>    
  </query>
  <query>
    <pool></pool>     
    <name value="mouldcontractquerydefine_searchmd" />
    <where>
      <w name="B.productModelId" des=""  reqName="productModelId" dtype="ch" oper="="  lg="" bt="" />
    </where>
    <select>
      <f name="B.id" alias="" ctype="" />
      <f name="D.dicName" alias="type" ctype="" />
      <f name="C.no" alias="" ctype="" />
      <f name="C.fullname" alias="name" ctype="" />
      <f name="B.size" alias="" ctype="" />
      <f name="B.materialQuality" alias="" ctype="" />
      <f name="B.unloadingNum" alias="" ctype="" />
      <f name="B.weight" alias="" ctype="" />
      <f name="B1.price" alias="" ctype="" />
      <f name="c.shortname" alias="mouldFactory" ctype="" />
      <f name="ifnull(A.id, '0')" alias="selected" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>(SELECT id, productModelId, type,size, materialQuality, unloadingNum, weight FROM b_MouldBaseInfo WHERE DeleteFlag = '0') as B left join (SELECT id, baseInfoId FROM b_MouldDetail WHERE DeleteFlag = '0') as A on B.id = A.baseInfoId LEFT JOIN (SELECT mouldId, price, mouldFactoryId  FROM b_MouldFactory WHERE DeleteFlag = '0') as B1 ON B1.mouldId = B.id LEFT JOIN (SELECT recordid, shortname, no, fullname FROM b_organization) as C ON C.recordid = B1.mouldFactoryId LEFT JOIN (SELECT dicid, dicName FROM s_Dic WHERE deleteflag='0' and enableflag = '0') as D ON D.dicid=b.type WHERE fullname is not null</from>
    <orderby>selected, type, price, B1.mouldFactoryId, no</orderby>
    <groupby></groupby>
    <having></having>
	<power>
	</power>    
  </query>
  <query>
    <pool></pool>     
    <name value="mouldcontractquerydefine_searchpay" />
    <where>
      <w name="mouldBaseId" des=""  reqName="mouldBaseId" dtype="ch" oper="="  lg="" bt="" />
    </where>
    <select>
      <f name="A.id" alias="" ctype="" />
      <f name="DATE_FORMAT(A.payTime, '%Y-%m-%d')" alias="payTime" ctype="" />
      <f name="A.pay" alias="" ctype="" />
      <f name="A.confirm" alias="" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>b_MouldPayList as A WHERE A.DeleteFlag = '0' </from>
    <orderby>payTime</orderby>
    <groupby></groupby>
    <having></having>
	<power>
	</power>    
  </query>
   <query>
    <pool></pool>     
    <name value="mouldcontractquerydefine_checkContractId" />
    <where>
      <w name="contractId" des=""  reqName="contractId" dtype="ch" oper="="  lg="" bt="" />
    </where>
    <select>
      <f name="A.id" alias="" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>b_MouldContractBaseInfo as A WHERE A.DeleteFlag = '0' </from>
    <orderby></orderby>
    <groupby></groupby>
    <having></having>
	<power>
	</power>    
  </query>
   <query>
    <pool></pool>     
    <name value="mouldcontractquerydefine_checkContractProductModelId" />
    <where>
      <w name="A.no" des=""  reqName="no" dtype="ch" oper="="  lg="" bt="" />
    </where>
    <select>
      <f name="id" alias="" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>b_MouldDetail as A WHERE A.DeleteFlag = '0' </from>
    <orderby></orderby>
    <groupby></groupby>
    <having></having>
	<power>
	</power>    
  </query>
   <query>
    <pool></pool>     
    <name value="mouldcontractquerydefine_getcontractserialno" />
    <where>
    <w name="substring(B.contractId, 1, char_length(B.contractId) - 3)" des=""  reqName="contractIdBase" dtype="ch" oper="="  lg="" bt="" />
    </where>
    <select>
      <f name="IFNULL(min(B.serialNo), 0)" alias="serialNo" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>(select contractId, (CONVERT(substring(contractId, char_length(contractId) - 2, 3), SIGNED) + 1) as serialNo FROM b_MouldContractBaseInfo WHERE deleteflag='0') as B WHERE NOT EXISTS (select serialNo from (select contractId, CONVERT(substring(contractId, char_length(contractId) - 2, 3), SIGNED) as serialNo FROM b_MouldContractBaseInfo WHERE deleteflag='0') as A WHERE A.serialNo = B.serialNo) </from>
    <orderby></orderby>
    <groupby></groupby>
    <having></having>
	<power>
	</power>    
  </query>
   <query>
    <pool></pool>     
    <name value="mouldcontractquerydefine_getmouldserialno" />
    <where>
    </where>
    <select>
      <f name="IFNULL(min(B.serialNo), 1)" alias="serialNo" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>(select (CONVERT(substring(no, char_length(no) - 1, 2), SIGNED) + 1) as serialNo FROM b_MouldDetail WHERE deleteflag='0') as B WHERE NOT EXISTS (select serialNo from (select CONVERT(substring(no, char_length(no) - 1, 2), SIGNED) as serialNo FROM b_MouldDetail WHERE deleteflag='0') as A WHERE A.serialNo = B.serialNo) </from>
    <orderby></orderby>
    <groupby></groupby>
    <having></having>
	<power>
	</power>    
  </query>
  <query>
    <pool></pool>     
    <name value="mouldcontractquerydefine_getMouldBaseInfoList" />
    <where>
      <w name="A.mouldBaseId" des=""  reqName="mouldBaseId" dtype="ch" oper="llike"  lg="" bt="" />
      <w name="C.mouldFactoryId" des=""  reqName="mouldFactoryId" dtype="ch" oper="="  lg="" bt="" />
    </where>
    <select>
      <f name="A.id" alias="" ctype="" />
      <f name="A.mouldId" alias="" ctype="" />
      <f name="A.name" alias="" ctype="" />
      <f name="A.size" alias="" ctype="" />
      <f name="A.materialQuality" alias="" ctype="" />
      <f name="A.unloadingNum" alias="" ctype="" />
      <f name="B.subCode" alias="" ctype="" />
      <f name="C.id" alias="" ctype="" />
      <f name="C.price" alias="" ctype="" />
      <f name="D.no" alias="" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>b_MouldBaseInfo as A, b_MouldSub as B, b_MouldFactory as C, b_organization as D WHERE A.DeleteFlag = '0' AND B.deleteFlag = '0' AND B.mouldId = A.id AND C.deleteFlag = '0' AND C.mouldId = A.id AND D.recordId = C.mouldFactoryId</from>
    <orderby>mouldId</orderby>
    <groupby></groupby>
    <having></having>
	<power>
	</power>    
  </query>
  <query>
    <pool></pool>     
    <name value="mouldcontractquerydefine_getUsedMouldBaseInfoList" />
    <where>
      <w name="mouldContractBaseId" des=""  reqName="mouldContractBaseId" dtype="ch" oper="llike"  lg="" bt="" />
    </where>
    <select>
      <f name="A.id" alias="" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>b_MouldDetail as A WHERE A.DeleteFlag = '0'</from>
    <orderby></orderby>
    <groupby></groupby>
    <having></having>
	<power>
	</power>    
  </query>
  
  <query>
    <pool></pool>     
    <name value="categorylist" />
    <where>
      <w name="A.categoryId" des=""  reqName="keywords1" dtype="ch" oper="like"  lg="OR" bt="(" />
      <w name="A.categoryName" des=""  reqName="keywords2" dtype="ch" oper="like"  lg="" bt=")" />
     </where>
    <select>
      <f name="A.categoryId" alias="id" ctype="" />
      <f name="A.categoryName" alias="name" ctype="" />
      <f name="CONCAT_WS(' | ', A.categoryId, A.categoryName, A.parentId, B.categoryName)" alias="viewList" ctype="" />
      <f name="A.parentId" alias="parentcategoryId" ctype="" />
      <f name="B.categoryName" alias="parentName" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>b_materialcategory AS A, b_materialcategory as B where B.categoryId = A.parentId AND A.deleteFlag = '0' AND B.deleteFlag = '0'</from>
    <orderby>A.parentId, A.categoryId</orderby>
    <groupby></groupby>
    <having></having>
	<power>
	</power>    
  </query>
   <query>
    <pool></pool>     
    <name value="mouldcontractquerydefine_getregulations" />
    <where>
    	<w name="mouldContractBaseId" des=""  reqName="key" dtype="ch" oper="="  lg="" bt="" />
    </where>
    <select>
      <f name="id" alias="" ctype="" />
      <f name="name" alias="" ctype="" />
      <f name="money" alias="" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>b_MouldContractRegulation WHERE deleteflag='0'</from>
    <orderby>name</orderby>
    <groupby></groupby>
    <having></having>
	<power>
	</power>    
  </query>
  <query>
    <pool></pool>     
    <name value="getParentName" />
    <where>
      <w name="A.categoryId" des=""  reqName="keywords1" dtype="ch" oper="="  lg="" bt="" />
     </where>
    <select>
      <f name="B.categoryId" alias="id" ctype="" />
      <f name="B.categoryName" alias="name" ctype="" />
    </select>
    <!-- 条件可以获得系统变量值 '@:来源session,#来源 2016/1/8未实现' -->
    <!-- $：由程序根据where句的情况追加where关键字' 无$：程序不负责追加where关键字，在from句中需写入where关键字 -->
    <from>b_materialcategory as A, b_materialcategory as B where A.deleteFlag = '0' AND B.deleteFlag = '0' AND B.categoryId = A.parentId</from>
    <orderby></orderby>
    <groupby></groupby>
    <having></having>
	<power>
	</power>    
  </query>

</root>